.container {
    background-color: var(--componentInputContainerBackgroundColor);
    border-radius: var(--componentInputContainerBorderRadius);
    padding: var(--componentInputContainerPadding);
    display: flex;
    flex-direction: column;
    flex-grow: 1;
}

.inputContainer {
    width: 100%;
    display: flex;
    flex-direction: row;
}

.inputField {
    display: flex;
    align-items: var(--componentInputInputFieldAlignItems);
    border-radius: var(--componentInputInputFieldBorderRadius);
    background-color: var(--componentInputInputFieldBackgroundColor);
    width: 100%;
}

.inputField:focus-within .input:not(:read-only),
.inputField:hover .input:not(:read-only) {
    transition: var(--componentInputTransition);
    box-shadow: var(--componentInputInputFieldBoxShadowFocus);
    -webkit-appearance: none;
    border-bottom-left-radius: var(--componentInputInputFieldBorderBottomLeftRadius);
    border-bottom-right-radius: var(--componentInputInputFieldBorderBottomRightRadius);
}

.inputField:focus-within .input:not(:read-only) ~ .passwordToggle,
.inputField:hover .input:not(:read-only) ~ .passwordToggle {
    box-shadow: var(--componentInputInputFieldBoxShadowFocus);
    transition: var(--componentInputTransition);
}

.input {
    box-sizing: border-box;
    color: var(--componentInputInputColor);
    border: var(--componentInputInputBorder);
    padding: var(--componentInputInputPadding);
    font-size: var(--componentInputInputFontSize);
    outline: none;
    text-align: var(--componentInputInputTextAlign);
    width: 100%;
    background-color: var(--componentInputInputBackgroundColor);
    /* height: var(--componentInputInputHeight); */
    height: fit-content;
    min-height: 40px;
    /* resize: vertical; */
    overflow: auto;
    transition: var(--componentInputTransition);
}

.input.isPicker {
    cursor: pointer;
    user-select: none;
}

.input:focus {
    border: var(--componentInputInputBorderFocus);
    outline: none;
}

.input:read-only {
    background-color: var(--componentInputInputBackgroundColorReadOnly);
    color: var(--componentInputInputColorReadOnly);
    box-shadow: var(--componentInputInputBoxShadowReadOnly);
    border-radius: var(--componentInputInputBorderRadiusReadOnly);
}

.input:read-only ~ .passwordToggle {
    background-color: var(--componentInputInputBackgroundColorReadOnlyHideToggle);
}

.passwordToggle {
    display: flex;
    align-items: center;
    cursor: pointer;
    transition: var(--componentInputHideToggleTransition);
    padding: var(--componentInputHideTogglePadding);
    background-color: var(--componentInputInputFieldBackgroundColor);
    border-radius: var(--componentInputInputFieldBorderRadius);
    margin-left: 4px;
}

.passwordToggle:hover {
    color: var(--componentInputHideToggleColorHover);
}
