.container {
    background-color: var(--componentInputContainerBackgroundColor);
    display: flex;
    justify-content: start;
    flex-direction: column;
    border-radius: var(--componentInputInputFieldBorderRadius);
    padding: var(--componentInputContainerPadding);
}

.label {
    font-size: var(--componentInputInputFontSize);
    word-wrap: break-word;
    margin-bottom: 6px;
    margin-left: 4px;
}

.textarea {
    border: var(--componentInputInputBorder);
    border-radius: var(--componentInputInputFieldBorderRadius);
    font-size: var(--componentInputInputFontSize);
    padding: var(--componentInputInputPadding);
    color: var(--componentInputInputColor);
    outline: var(--componentInputInputOutline);
    width: 100%;
    height: fit-content;
    min-height: 40px;
    max-height: 500px;
    resize: vertical;
    transition: box-shadow var(--componentInputTransition);
}

.textarea:read-only {
    background-color: var(--componentInputInputBackgroundColorReadOnly);
}

.textarea:focus-within:not(:read-only),
.textarea:hover:not(:read-only) {
    transition: box-shadow var(--componentInputTransition);
    box-shadow: var(--componentInputInputFieldBoxShadowFocus);
    border-bottom-left-radius: var(--componentInputInputFieldBorderBottomLeftRadius);
    border-bottom-right-radius: var(--componentInputInputFieldBorderBottomRightRadius);
}

@media only screen and (min-width: 800px) {

    .container {
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
    }

    .label {
        margin-bottom: 0px;
    }

    .textarea {
        margin-left: var(--componentInputInputContainerMarginLeft);
        max-width: var(--componentInputInputContainerMaxWidth);
    }

}
