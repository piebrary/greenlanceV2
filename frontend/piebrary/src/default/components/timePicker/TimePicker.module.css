.container {
    background-color: var(--componentTimePickerContainerBackgroundColor);
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-radius: var(--componentTimePickerContainerBorderRadius);
    padding: var(--componentTimePickerContainerPadding);
}

.timeContainer {
    margin-left: var(--componentTimePickerTimeContainerMarginLeft);
    flex-grow: 1;
    max-width: var(--componentTimePickerTimeContainerMaxWidth);
    width: var(--componentTimePickerTimeContainerWidth);
}

.selectedTime {
    color: var(--componentTimePickerSelectedTimeColor);
    box-shadow: none;
    border-radius: var(--componentTimePickerSelectedTimeBorderRadius);
    cursor: pointer;
    user-select: none;
    outline: var(--componentTimePickerSelectedTimeOutline);
    text-align: var(--componentTimePickerSelectedTimeTextAlign);
    width: 100%;
    border: var(--componentTimePickerSelectedTimeBorder);
    padding: var(--componentTimePickerSelectedTimePadding);
    font-size: var(--componentTimePickerSelectedTimeFontSize);
    background-color: var(--componentTimePickerSelectedTimeBackgroundColor);
}

.selectedTime:hover {
    color: var(--componentTimePickerSelectedTimeColorHover);
    background-color: var(--componentTimePickerSelectedTimeBackgroundColorHover);
    transition: var(--componentTimePickerSelectedTimeTransitionHover);
    cursor: pointer;
    user-select: none;
}

.timePicker {
    box-sizing: border-box;
    color: var(--componentTimePickerTimePickerColor);
    border: var(--componentTimePickerTimePickerBorder);
    padding: var(--componentTimePickerTimePickerPadding);
    font-size: var(--componentTimePickerTimePickerFontSize);
    outline: var(--componentTimePickerTimePickerOutline);
    width: 100%;
    border-radius: var(--componentTimePickerTimePickerBorderRadius);
    background-color: var(--componentTimePickerTimePickerBackgroundColor);
    margin-top: var(--componentTimePickerTimePickerMarginTop);
    display: flex;
    justify-content: center;
    flex-direction: column;
}

.timeGroup {
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 100%;
}

/* .timeNumbers {
    width: 100%;
    overflow: hidden;
    display: flex;
    flex-direction: row;
    justify-content: center;
    margin-top: 8px;
    flex-wrap: wrap;
} */

.ampmToggleContainer {
    grid-column: 1 / 7;
    grid-row: 1;
    display: flex;
    justify-content: right;
    align-items: center;
    user-select: none;
}

.timeNumber {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    user-select: none;
}

.boundariesInfo {
    color: var(--componentTimePickerBoundariesInfoColor);
    display: flex;
    align-items: center;
    justify-content: var(--componentTimePickerBoundariesInfoJustifyContent);
    padding-right: var(--componentTimePickerBoundariesInfoPaddingRight);
    margin-top: var(--componentTimePickerBoundariesInfoMarginTop);
    font-size: var(--componentTimePickerBoundariesInfoFontSize);
    user-select: none;
}

.hoursGrid24hGrid {
    display: grid;
    grid-template-columns: var(--componentTimePickerHoursGrid24TemplateColumns);
    gap: var(--componentTimePickerHoursGrid24Gap);
    grid-auto-rows: var(--componentTimePickerHoursGrid24AutoRows);
    margin-top: var(--componentTimePickerHoursGrid24MarginTop);
}

.hoursGridAMPMGrid {
    display: grid;
    grid-template-columns: var(--componentTimePickerHoursGridAMPMTemplateColumns);
    gap: var(--componentTimePickerHoursGridAMPMGap);
    grid-auto-rows: var(--componentTimePickerHoursGridAMPMAutoRows);
    margin-top: var(--componentTimePickerHoursGridAMPMMarginTop);
}

.minutesGridGrid {
    display: grid;
    grid-template-columns: var(--componentTimePickerMinutesGridTemplateColumns);
    gap: var(--componentTimePickerMinutesGridGap);
    grid-auto-rows: var(--componentTimePickerMinutesGridAutoRows);
    margin-top: var(--componentTimePickerMinutesGridMarginTop);
}

.monthYearTitle {
    grid-column: 3 / 7;
    display: flex;
    align-items: center;
    justify-content: center;
    user-select: none;
}

.timeHoursTitle {
    grid-column: 3 / 6;
    display: flex;
    align-items: center;
    justify-content: center;
    user-select: none;
}

.timeMinutesTitle {
    grid-column: 3 / 6;
    display: flex;
    align-items: center;
    justify-content: center;
    user-select: none;
}

.isSelectable {
    padding: var(--componentTimePickerIsSelectablePadding);
    border-radius: var(--componentTimePickerIsSelectableBorderRadius);
    user-select: none;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--componentTimePickerIsSelectableColor);
}

.isSelectable:hover {
    color: var(--componentTimePickerIsSelectableColorHover);
    background-color: var(--componentTimePickerIsSelectableBackgroundColorHover);
    transition: var(--componentTimePickerIsSelectableTransitionHover);
    cursor: pointer;
}

.isNotSelectable {
    color: var(--componentTimePickerIsNotSelectableColor);
}

.daySelected {
    color: var(--componentTimePickerDaySelectedColor) !important;
    background-color: var(--componentTimePickerDaySelectedBackgroundColor);
}

.outOfBounds {
    color: var(--componentTimePickerOutOfBoundsColor);
}

.cancelBtnButton {
    color: var(--componentTimePickerCancelBtnColor);
    background-color: var(--componentTimePickerCancelBtnBackgroundColor);
}

.cancelBtnButton:hover {
    color: var(--componentTimePickerCancelBtnColorHover);
    background-color: var(--componentTimePickerCancelBtnBackgroundColorHover);
}

.previousBtnButton {
    color: var(--componentTimePickerCancelBtnColor);
    background-color: var(--componentTimePickerPreviousBtnBackgroundColor);
}

.previousBtnButton:hover {
    color: var(--componentTimePickerPreviousBtnColorHover);
    background-color: var(--componentTimePickerPreviousBtnBackgroundColorHover);
}

.nextBtnButton {
    color: var(--componentTimePickerNextBtnColor);
    background-color: var(--componentTimePickerNextBtnBackgroundColor);
}

.nextBtnButton:hover {
    color: var(--componentTimePickerNextBtnColorHover);
    background-color: var(--componentTimePickerNextBtnBackgroundColorHover);
}
